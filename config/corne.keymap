#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// layers
#define BASE      0
#define LOWER     1
#define RAISE     2
#define ADJUST    3
#define LHAND     4

#include "keys/36.h"
// #include "includes/macros.dtsi"
// #include "includes/combos.dtsi"
// #include "includes/behaviors.dtsi"

// ╰─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────╯
//                     │SEC THMB │PRM THMB │TER THMB │   │TER THMB │PRM THMB │SEC THMB │
//                     │   MED   │  NUM    │ LSHIFT  │   │  NAV    │CTRL+DEL │  FUN    │
//                     │ Sk SHFT │ REPEAT  │  Tab    │   │  SPACE  │  DEL    │ SK CTRL │
//                     ╰─────────────────────────────╯   ╰─────────────────────────────╯
//                          ╰caps_word on double tap, not sure if I like it yet

// TODO: Learn how to configure the magic shift / smart shift behavior

&soft_off {
    hold-time-ms = <5000>; // Only turn off it the key is held for 5 seconds or longer.
};

&lt {  // layer-tap config
  flavor = "balanced";
  tapping-term-ms = <200>;
  quick-tap-ms = <175>;
};

/ {
  // 5x3 Layout
  chosen {
    zmk,matrix_transform = &five_column_transform;
  };

  keymap {
    compatible = "zmk,keymap";
    base_layer { // layer 0 (base)
    bindings = <

// ╭─────────────────────────────────────────────────────────────────────╮   ╭─────────────────────────────────────────────────────────────────────╮
// │      Q      │      W      │      E      │      R      │      T      │   │      Y      │      U      │      I      │      O      │      P      │
      &kp Q         &kp W         &kp E         &kp R         &kp T             &kp Y         &kp U         &kp I         &kp O         &kp P
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// │  (LMETA, A) │  (LSHFT, S) │  (LALT, D)  │  (LCTRL, F) │      G      │   │      H      │ (RCTRL, J)  │  (RALT, K)  │ (RSHFT, L)  │  (RMETA, ;) │
    &hml LMETA A  &hml LSHFT S  &hml LALT D   &hml LCTRL F    &kp G             &kp H       &hmr RCTRL J  &hmr RALT K   &hmr RSHFT L &hmr RMETA SEMI
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// │      Z      │      X      │      C      │      V      │      B      │   │      N      │      M      │      ,      │      .      │      /      │
      &kp Z         &kp X         &kp C         &kp V         &kp B             &kp N         &kp M         &kp COMMA      &kp DOT       &kp FSLH
// ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
//                             │  (4, TAB)   │ MAGIC SHIFT │  (1, BSPC)  │   │  (2, ENTR)  │    SPACE    │      ESC    │
                                &lt LHAND TAB   &sk LSHFT   &ltb LOWER 0      &lte RAISE 0  &kp SPACE       &kp ESC
//                             ╰─────────────────────────────────────────╯   ╰─────────────────────────────────────────╯
      >;
    };

    lower_layer { // layer 1 (lower)
    bindings = <

// ╭─────────────────────────────────────────────────────────────────────╮   ╭─────────────────────────────────────────────────────────────────────╮
// │      !      │      @      │      {      │      }      │      %      │   │      -      │      7      │      8      │      9      │      |      │
      &kp EXCL      &kp AT        &kp LBRC      &kp RBRC      &kp PRCNT        &kp KP_MINUS   &kp KP_N7     &kp KP_N8     &kp KP_N9      &kp PIPE
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// │      &      │      =      │      (      │      )      │      *      │   │      +      │      4      │      5      │      6      │      "      │
      &kp AMPS      &kp EQUAL     &kp LPAR      &kp RPAR      &kp STAR         &kp KP_PLUS    &kp KP_N4     &kp KP_N5     &kp KP_N6      &kp DQT
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// │      $      │      #      │      [      │      ]      │      ^      │   │      .      │      1      │      2      │      3      │      `      │
      &kp DLLR      &kp HASH      &kp LBKT      &kp RBKT      &kp CARET        &kp KP_DOT     &kp KP_N1     &kp KP_N2     &kp KP_N3     &kp GRAVE
// ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
//                             │             │ MAGIC SHIFT │    HELD_    │   │      0      │      _      │             │
                                   &trans        &trans         &trans          &kp KP_N0     &kp UNDER      &trans
//                             ╰─────────────────────────────────────────╯   ╰─────────────────────────────────────────╯
      >;
    };

    raised_layer { // layer 2 (raised)
    bindings = <

// ╭─────────────────────────────────────────────────────────────────────╮   ╭─────────────────────────────────────────────────────────────────────╮
// │      F1     │      F2     │      F3     │      F4     │             │   │      HOME   │      Pg_Dn  │      Pg_Up  │      END    │      \      │
      &kp F1        &kp F2        &kp F3        &kp F4          &none           &kp HOME      &kp PG_DN     &kp PG_UP     &kp END        &kp BSLH
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// │      F5     │      F6     │      F7     │      F8     │             │   │      ←      │      ↓      │      ↑      │      →      │      '      │
      &kp F5        &kp F6        &kp F7        &kp F8          &none           &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT      &kp SQT
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// │      F9     │     F10     │     F11     │     F12     │             │   │             │             │             │             │      ~      │
      &kp F9       &kp F10       &kp F11       &kp F12          &none             &none         &none         &none         &none       &kp TILDE
// ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
//                             │             │             │             │   │    _HELD    │             │             │
                                   &trans        &trans        &trans             &trans        &trans        &trans
//                             ╰─────────────────────────────────────────╯   ╰─────────────────────────────────────────╯
      >;
    };

    adjust_layer { // layer 3 (adjust)
    bindings = <

// ╭─────────────────────────────────────────────────────────────────────╮   ╭─────────────────────────────────────────────────────────────────────╮
// │      ¡      │             │      É      │             │             │   │             │     Ú/Ü     │      Í      │      Ó      │             │
        &i_excl       &none         &acnt_e       &none         &none             &none         &mod_u        &acnt_i       &acnt_o       &none
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// │      Á      │             │             │             │             │   │             │             │             │             │             │
        &acnt_a       &none         &none         &none         &none             &none         &none         &none         &none         &none
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// │             │             │             │             │             │   │      Ñ      │             │             │      °      │      ¿      │
        &none         &none         &none         &none         &none             &ene          &none         &none        &dgree        &i_qmrk
// ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
//                             │             │             │    HELD_    │   │    _HELD    │             │             │
                                    &trans       &trans        &trans             &trans       &trans         &trans
//                             ╰─────────────────────────────────────────╯   ╰─────────────────────────────────────────╯
      >;
    };

    lhand_layer { // layer 4 (left hand)
    bindings = <

// ╭─────────────────────────────────────────────────────────────────────╮   ╭─────────────────────────────────────────────────────────────────────╮
// │             │             │             │             │             │   │   BT FRST   │   BT SCND   │   BT THRD   │    BT NXT   │    BT PRV   │
        &none         &none         &none         &none         &none         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_NXT    &bt BT_PRV
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// │ SELECT ALL  │ SCREEN SHOT │             │    FIND     │             │   │    PREV     │    VolDn    │    VolUp    │    NEXT     │    PLAY     │
      &kp LC(A)   &kp LS(LG(S))     &none       &kp LC(F)       &none          &kp C_PREV   &kp C_VOL_DN  &kp C_VOL_UP   &kp C_NEXT     &kp C_PP
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// │             │             │     COPY    │    PASTE    │             │   │             │    MUTE     │             │ PAUSE BREAK │ PRNT SCREEN │
        &none         &none       &kp LC(C)     &kp LC(V)       &none             &none      &kp C_MUTE       &none    &kp PAUSE_BREAK  &kp PSCRN
// ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
//                             │     HELD_   │             │             │   │             │             │  SOFT OFF   │
                                    &trans       &trans        &trans             &trans       &trans       &soft_off
//                             ╰─────────────────────────────────────────╯   ╰─────────────────────────────────────────╯
      >;
    };
  };

  // Condition to enter the adjust layer (layer 3)
  conditional_layers {
      compatible = "zmk,conditional-layers";
      tri_layer {
          if-layers = <1 2>;
          then-layer = <3>;
      };
  };
};

/ {
    combos {
        compatible = "zmk,combos";
        // combo_umlt_u {
        //     timeout-ms = <50>;
        //     layers = <0>;
        //     key-positions = <6 7>;
        //     bindings = <&umlt_u>;
        // };

        combo_bt_clr {
            timeout-ms = <50>;
            layers = <4>;
            key-positions = <8 9>;
            bindings = <&bt BT_CLR>;
        };
    };
};

/ {
    behaviors {
        // Timer-less HomeRow Mods
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            flavor = "balanced";
            tapping-term-ms = <280>;                                // repeat on tap-into-hold
            quick-tap-ms = <175>;
            // global-quick-tap-ms = <150>;                         // requires PR #1387
            global-quick-tap;
            hold-trigger-key-positions = <RIGHT_KEYS THUMB_KEYS>;
            hold-trigger-on-release;                                // requires PR #1423
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            flavor = "balanced";
            tapping-term-ms = <280>;                                // repeat on tap-into-hold
            quick-tap-ms = <175>;
            // global-quick-tap-ms = <150>;                         // requires PR #1387
            global-quick-tap;
            hold-trigger-key-positions = <LEFT_KEYS THUMB_KEYS>;
            hold-trigger-on-release;                                // requires PR #1423
        };

        tm: thumb_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            flavor = "balanced";
            tapping-term-ms = <200>;                                // repeat on tap-into-hold
            quick-tap-ms = <175>;
            retro-tap;                                              // use tap when key is used without another key
        };

        // Tap Dance
        // arrw_td: arrow_tap_dance {
        //     compatible = "zmk,behavior-tap-dance";
        //     #binding-cells = <0>;
        //     tapping-term-ms = <200>;
        //     bindings = <&s_arrw>, <&b_arrw>;
        // };
        //
        // pipe_td: pipe_tap_dance {
        //     compatible = "zmk,behavior-tap-dance";
        //     #binding-cells = <0>;
        //     tapping-term-ms = <200>;
        //     bindings = <&pipe>, <&b_pipe>;
        // };
        //
        // wlrus_td: wallrus_tap_dance {
        //     compatible = "zmk,behavior-tap-dance";
        //     #binding-cells = <0>;
        //     tapping-term-ms = <200>;
        //     bindings = <&f_arrw>, <&wlrus>;
        // };
    };

    ltb: ltb {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        flavor = "balanced";
        tapping-term-ms = <200>;
        quick-tap-ms = <175>;
        bindings = <&mo>, <&bspc_del>;
        display-name = "Layer-Tap";
    };

    lte: lte {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        flavor = "balanced";
        tapping-term-ms = <200>;
        quick-tap-ms = <175>;
        bindings = <&mo>, <&entr_ins>;
        display-name = "Layer-Tap";
    };

    // Mod Morph
    bspc: bspc_del {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp BSPC>, <&kp DEL>;
        mods = <MOD_LALT>;
    };

    entr: entr_ins {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp RET>, <&kp INS>;
        mods = <MOD_RALT>;
    };

    acnt_a: accent_a {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&l_a>, <&u_a>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    acnt_e: accent_e {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&l_e>, <&u_e>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    acnt_i: accent_i {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&l_i>, <&u_i>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    acnt_o: accent_o {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&l_o>, <&u_o>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    acnt_u: accent_u {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&l_u>, <&u_u>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    umlt_u: umlaut_u {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&l_um_u>, <&u_um_u>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };

    mod_u: mod_u {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&acnt_u>, <&umlt_u>;
        mods = <(MOD_LALT|MOD_RALT)>;
    };

    ene: ene {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&l_n>, <&u_n>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
};

/ {
    macros {
        // PROGRAMMING SYNTAX
        // s_arrw: slim_arrow { // ->
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_tap>,
        //         <&kp MINUS>,
        //         <&macro_tap>,
        //         <&kp GREATER_THAN>;
        // };

        // b_arrw: back_arrow { // <-
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_tap>,
        //         <&kp LESS_THAN>,
        //         <&macro_tap>,
        //         <&kp MINUS>;
        // };

        // f_arrw: fat_arrow { // =>
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_tap>,
        //         <&kp EQUAL>,
        //         <&macro_tap>,
        //         <&kp GREATER_THAN>;
        // };

        // pipe: pipe_op { // |>
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_tap>,
        //         <&kp PIPE>,
        //         <&macro_tap>,
        //         <&kp GREATER_THAN>;
        // };

        // b_pipe: back_pipe_op { // ~>
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_tap>,
        //         <&kp TILDE>,
        //         <&macro_tap>,
        //         <&kp GREATER_THAN>;
        // };

        // wlrus: wallrus { // :=
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_tap>,
        //         <&kp COLON>,
        //         <&macro_tap>,
        //         <&kp EQUAL>;
        // };

        // SPANISH LETTERS
        l_a: acnt_a { // á
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_1 &kp KP_NUMBER_6 &kp KP_NUMBER_0>,
                <&macro_release>,
                <&kp LEFT_ALT>;
        };

        u_a: upr_acnt_a { // Á
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_1 &kp KP_NUMBER_9 &kp KP_NUMBER_3>,
                <&macro_release>,
                <&kp LEFT_ALT>;
        };

        l_e: lwr_acnt_e { // é
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_1 &kp KP_NUMBER_3 &kp KP_NUMBER_0>,
                <&macro_release>,
                <&kp LEFT_ALT>;
        };

        u_e: upr_acnt_e { // É
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_1 &kp KP_NUMBER_4 &kp KP_NUMBER_4>,
                <&macro_release>,
                <&kp LEFT_ALT>;
        };

        l_i: lwr_acnt_i { // í
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_1 &kp KP_NUMBER_6 &kp KP_NUMBER_1>,
                <&macro_release>,
                <&kp LEFT_ALT>;
        };

        u_i: upr_acnt_i { // Í
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_0 &kp KP_NUMBER_5>,
                <&macro_release>,
                <&kp LEFT_ALT>;
        };

        l_o: lwr_acnt_o { // ó
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_1 &kp KP_NUMBER_6 &kp KP_NUMBER_2>,
                <&macro_release>,
                <&kp LEFT_ALT>;
        };

        u_o: upr_acnt_o { // Ó
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_1 &kp KP_NUMBER_1>,
                <&macro_release>,
                <&kp LEFT_ALT>;
        };

        l_u: lwr_acnt_u { // ú
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_1 &kp KP_NUMBER_6 &kp KP_NUMBER_3>,
                <&macro_release>,
                <&kp LEFT_ALT>;
        };

        u_u: upr_acnt_u { // Ú
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_1 &kp KP_NUMBER_8>,
                <&macro_release>,
                <&kp LEFT_ALT>;
        };

        l_um_u: lwr_umlt_u { // ü
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_5 &kp KP_NUMBER_2>,
                <&macro_release>,
                <&kp LEFT_ALT>;
        };

        u_um_u: upr_umlt_u { // Ü
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_2 &kp KP_NUMBER_0>,
                <&macro_release>,
                <&kp LEFT_ALT>;
        };

        l_n: lwr_ene { // ñ
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_1 &kp KP_NUMBER_6 &kp KP_NUMBER_4>,
                <&macro_release>,
                <&kp LEFT_ALT>;
        };

        u_n: upr_ene { // Ñ
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_1 &kp KP_NUMBER_6 &kp KP_NUMBER_5>,
                <&macro_release>,
                <&kp LEFT_ALT>;
        };

        i_excl: inv_excl { // ¡
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_1 &kp KP_NUMBER_6 &kp KP_NUMBER_1>,
                <&macro_release>,
                <&kp LEFT_ALT>;
        };

        i_qmrk: inv_qmrk { // ¿
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_1 &kp KP_NUMBER_9 &kp KP_NUMBER_1>,
                <&macro_release>,
                <&kp LEFT_ALT>;
        };

        // OTHER
        dgree: degree { // °
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_1 &kp KP_NUMBER_7 &kp KP_NUMBER_6>,
                <&macro_release>,
                <&kp LEFT_ALT>;
        };
    };
};
