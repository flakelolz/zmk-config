#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// layers
#define BASE      0
#define LOWER     1
#define RAISE     2
#define ADJUST    3
#define WORK      4
#define GAME1     5
#define GAME2     6
// #define __        0

#include "keys/36.h"
// #include "includes/macros.dtsi"
// #include "includes/combos.dtsi"
// #include "includes/behaviors.dtsi"

&soft_off {
    hold-time-ms = <500>; // Only turn off it the key is held half a second or longer.
};

&lt {  // layer-tap config
  flavor = "balanced";
  tapping-term-ms = <200>;
  quick-tap-ms = <175>;
};

&mt {  // mod-tap config
  flavor = "balanced";
  tapping-term-ms = <200>;
  quick-tap-ms = <175>;
};

&sk { // sticky key
    quick-release;
};

/ {
  // 5x3 Layout
  chosen {
    zmk,matrix_transform = &five_column_transform;
  };

  keymap {
    compatible = "zmk,keymap";
    base_layer { // layer 0 (base)
    bindings = <

// ╭─────────────────────────────────────────────────────────────────────╮   ╭─────────────────────────────────────────────────────────────────────╮
// │      Q      │      W      │      E      │      R      │      T      │   │      Y      │      U      │      I      │      O      │      P      │
      &kp Q         &kp W         &kp E         &kp R         &kp T             &kp Y         &kp U         &kp I         &kp O         &kp P
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// │  (LGUI, A)  │  (LSHFT, S) │  (LALT, D)  │  (LCTRL, F) │      G      │   │      H      │ (RCTRL, J)  │  (RALT, K)  │ (RSHFT, L)  │  (RGUI, ;)  │
     &hml LGUI A  &hml LSHFT S  &hml LALT D   &hml LCTRL F    &kp G             &kp H       &hmr RCTRL J  &hmr RALT K   &hmr RSHFT L &hmr RGUI SEMI
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// │      Z      │      X      │      C      │      V      │      B      │   │      N      │      M      │      ,      │      .      │      /      │
      &kp Z         &kp X         &kp C         &kp V         &kp B             &kp N         &kp M         &kp COMMA      &kp DOT       &kp FSLH
// ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
//                             │      4      │ (SHFT, TAB) │  (1, BSPC)  │   │  (2, ENTR)  │(SHFT, SPACE)│ (CTRL, ESC) │
                                  &mo WORK   &tm LSHFT TAB  &lt LOWER BSPC   &lt RAISE RET &tm RSHFT SPACE &tm RCTRL ESC
//                             ╰─────────────────────────────────────────╯   ╰─────────────────────────────────────────╯
      >;
    };

    lower_layer { // layer 1 (lower)
    bindings = <

// ╭─────────────────────────────────────────────────────────────────────╮   ╭─────────────────────────────────────────────────────────────────────╮
// │      !      │      @      │      {      │      }      │      ^      │   │      +      │      7      │      8      │      9      │      =      │
      &kp EXCL      &kp AT        &kp LBRC      &kp RBRC      &kp CARET         &kp PLUS     &kp N7        &kp N8        &kp N9         &kp EQUAL
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// │      *      │      &      │      (      │      )      │      $      │   │      -      │      4      │      5      │      6      │      _      │
      &kp STAR      &kp AMPS      &kp LPAR      &kp RPAR      &kp DLLR          &kp MINUS    &kp N4        &kp N5        &kp N6         &kp UNDER
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// │             │      #      │      [      │      ]      │      %      │   │      .      │      1      │      2      │      3      │             │
        &none       &kp HASH      &kp LBKT      &kp RBKT      &kp PRCNT         &kp DOT      &kp N1        &kp N2        &kp N3          &trans
// ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
//                             │   LAYER 5   │    SHIFT    │    HELD_    │   │  (2, INS)   │(SHFT, SPACE)│      0      │
                                  &to GAME1      &trans        &trans         &lt RAISE INS     &trans     &kp N0
//                             ╰─────────────────────────────────────────╯   ╰─────────────────────────────────────────╯
      >;
    };

    raise_layer { // layer 2 (raise)
    bindings = <

// ╭─────────────────────────────────────────────────────────────────────╮   ╭─────────────────────────────────────────────────────────────────────╮
// │      F1     │      F2     │      F3     │      F4     │             │   │      HOME   │      Pg_Dn  │      Pg_Up  │      END    │      \      │
      &kp F1        &kp F2        &kp F3        &kp F4          &none           &kp HOME      &kp PG_DN     &kp PG_UP     &kp END        &kp BSLH
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// │      F5     │      F6     │      F7     │      F8     │             │   │      ←      │      ↓      │      ↑      │      →      │      '      │
      &kp F5        &kp F6        &kp F7        &kp F8          &none           &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT      &kp SQT
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// │      F9     │     F10     │     F11     │     F12     │             │   │             │             │             │             │      `      │
      &kp F9       &kp F10       &kp F11       &kp F12          &none             &none         &none         &none         &none         &kp GRAVE
// ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
//                             │             │             │   (1, DEL)  │   │    _HELD    │             │             │
                                   &trans        &trans     &lt LOWER DEL         &trans        &trans        &trans
//                             ╰─────────────────────────────────────────╯   ╰─────────────────────────────────────────╯
      >;
    };

    adjust_layer { // layer 3 (adjust)
    bindings = <

// ╭─────────────────────────────────────────────────────────────────────╮   ╭─────────────────────────────────────────────────────────────────────╮
// │             │             │             │             │             │   │   BT FRST   │   BT SCND   │   BT THRD   │    BT NXT   │    BT PRV   │
        &none         &none         &none         &none         &none         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_NXT    &bt BT_PRV
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// │             │             │             │             │             │   │    PREV     │    VolDn    │    VolUp    │    NEXT     │    PLAY     │
        &none         &none         &none         &none         &none          &kp C_PREV   &kp C_VOL_DN  &kp C_VOL_UP   &kp C_NEXT     &kp C_PP
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// │             │             │             │             │             │   │             │    MUTE     │             │ PAUSE BREAK │ PRNT SCREEN │
        &none         &none         &none         &none         &none             &none      &kp C_MUTE       &none    &kp PAUSE_BREAK  &kp PSCRN
// ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
//                             │             │             │    HELD_    │   │    _HELD    │             │             │
                                    &trans       &trans        &trans             &trans       &trans        &trans
//                             ╰─────────────────────────────────────────╯   ╰─────────────────────────────────────────╯
      >;
    };

    work_layer { // layer 4 (for work)
    bindings = <

// ╭─────────────────────────────────────────────────────────────────────╮   ╭─────────────────────────────────────────────────────────────────────╮
// │             │             │             │             │             │   │      +      │      7      │      8      │      9      │   NUM LOCK  │
        &none         &none         &none         &none         &none          &kp KP_PLUS    &kp KP_N7     &kp KP_N8     &kp KP_N9    &kp KP_NUM
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// │             │             │             │    FIND     │             │   │      -      │      4      │      5      │      6      │      *      │
        &none         &none         &none       &kp LC(F)       &none          &kp KP_MINUS   &kp KP_N4     &kp KP_N5     &kp KP_N6  &kp KP_MULTIPLY
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// │     UNDO    │     CUT     │     COPY    │    PASTE    │             │   │      .      │      1      │      2      │      3      │      /      │
      &kp LC(Z)     &kp LC(X)     &kp LC(C)     &kp LC(V)       &none          &kp KP_DOT     &kp KP_N1     &kp KP_N2     &kp KP_N3   &kp KP_DIVIDE
// ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
//                             │     HELD_   │    ENTER    │             │   │    ENTER    │             │      0      │
                                    &trans    &kp ENTER         &trans        &kp KP_ENTER      &trans      &kp KP_N0
//                             ╰─────────────────────────────────────────╯   ╰─────────────────────────────────────────╯
      >;
    };

    game1_layer { // layer 5 (gaming default)
    bindings = <

// ╭─────────────────────────────────────────────────────────────────────╮   ╭─────────────────────────────────────────────────────────────────────╮
// │     TAB     │      Q      │      W      │      E      │      R      │   │             │             │             │             │             │
       &kp TAB      &kp Q         &kp W         &kp E         &kp R               &trans       &trans        &trans        &trans        &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// │    SHIFT    │      A      │      S      │      D      │      F      │   │             │             │             │             │             │
      &kp LSHFT     &kp A         &kp S         &kp D         &kp F               &trans       &trans        &trans        &trans        &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// │   CONTROL   │      Z      │      X      │      C      │      V      │   │             │             │             │             │             │
      &kp LCTRL     &kp Z         &kp X         &kp C         &kp V               &trans       &trans        &trans        &trans        &trans
// ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
//                             │             │    SPACE    │      6      │   │             │             │             │
                                    &none       &kp SPACE   &mo GAME2             &trans       &trans        &trans
//                             ╰─────────────────────────────────────────╯   ╰─────────────────────────────────────────╯
      >;
    };

    game2_layer { // layer 6 (gaming extension)
    bindings = <

// ╭─────────────────────────────────────────────────────────────────────╮   ╭─────────────────────────────────────────────────────────────────────╮
// │     ESC     │     F1      │     F2      │     F3      │     F4      │   │             │             │             │             │             │
     &kp ESC       &kp F1        &kp F2        &kp F3        &kp F4               &trans       &trans        &trans        &trans        &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// │      `      │      1      │      2      │      3      │      4      │   │             │             │             │             │             │
      &kp GRAVE    &kp N1        &kp N2        &kp N3        &kp N4               &trans       &trans        &trans        &trans        &trans
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// │     ALT     │             │      I      │      M      │      P      │   │             │             │             │             │             │
      &kp LALT        &none       &kp I         &kp M         &kp P               &trans       &trans        &trans        &trans        &trans
// ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
//                             │   LAYER 1   │             │    HELD_    │   │             │             │             │
                                  &to BASE        &none        &trans             &trans       &trans        &trans
//                             ╰─────────────────────────────────────────╯   ╰─────────────────────────────────────────╯
      >;
    };
  };

  // Condition to enter the adjust layer (layer 3)
  conditional_layers {
      compatible = "zmk,conditional-layers";
      tri_layer {
          if-layers = <1 2>;
          then-layer = <3>;
      };
  };
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <30>;
            layers = <0>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        // combo_umlt_u {
        //     timeout-ms = <50>;
        //     layers = <3>;
        //     key-positions = <6 7>;
        //     bindings = <&umlt_u>;
        // };

        combo_bt_clr {
            timeout-ms = <50>;
            layers = <3>;
            key-positions = <5 6>;
            bindings = <&bt BT_CLR>;
        };

        combo_bt_clr_all {
            timeout-ms = <50>;
            layers = <3>;
            key-positions = <5 6 7>;
            bindings = <&bt BT_CLR_ALL>;
        };

        combo_usb_toggle {
            timeout-ms = <50>;
            layers = <3>;
            key-positions = <8 9>;
            bindings = <&out OUT_TOG>;
        };

        combo_soft_off {
            timeout-ms = <50>;
            layers = <3>;
            key-positions = <10 19>;
            bindings = <&soft_off>;
        };
    };
};

/ {
    behaviors {
        // Timer-less HomeRow Mods
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            flavor = "balanced";
            tapping-term-ms = <280>;                                // repeat on tap-into-hold
            quick-tap-ms = <175>;
            // global-quick-tap-ms = <150>;                         // requires PR #1387
            global-quick-tap;
            hold-trigger-key-positions = <RIGHT_KEYS THUMB_KEYS>;
            hold-trigger-on-release;                                // requires PR #1423
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            flavor = "balanced";
            tapping-term-ms = <280>;                                // repeat on tap-into-hold
            quick-tap-ms = <175>;
            // global-quick-tap-ms = <150>;                         // requires PR #1387
            global-quick-tap;
            hold-trigger-key-positions = <LEFT_KEYS THUMB_KEYS>;
            hold-trigger-on-release;                                // requires PR #1423
        };

        tm: thumb_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            flavor = "balanced";
            tapping-term-ms = <200>;                                // repeat on tap-into-hold
            quick-tap-ms = <175>;
            // retro-tap;                                              // use tap when key is used without another key
        };
    };

    // // Mod Morph
    // a: accent_a {
    //     compatible = "zmk,behavior-mod-morph";
    //     #binding-cells = <0>;
    //     bindings = <&l_a>, <&u_a>;
    //     mods = <(MOD_LSFT|MOD_RSFT)>;
    // };
    //
    // e: accent_e {
    //     compatible = "zmk,behavior-mod-morph";
    //     #binding-cells = <0>;
    //     bindings = <&l_e>, <&u_e>;
    //     mods = <(MOD_LSFT|MOD_RSFT)>;
    // };
    //
    // i: accent_i {
    //     compatible = "zmk,behavior-mod-morph";
    //     #binding-cells = <0>;
    //     bindings = <&l_i>, <&u_i>;
    //     mods = <(MOD_LSFT|MOD_RSFT)>;
    // };
    //
    // o: accent_o {
    //     compatible = "zmk,behavior-mod-morph";
    //     #binding-cells = <0>;
    //     bindings = <&l_o>, <&u_o>;
    //     mods = <(MOD_LSFT|MOD_RSFT)>;
    // };
    //
    // u: accent_u {
    //     compatible = "zmk,behavior-mod-morph";
    //     #binding-cells = <0>;
    //     bindings = <&l_u>, <&u_u>;
    //     mods = <(MOD_LSFT|MOD_RSFT)>;
    // };
    //
    // umlt_u: umlaut_u {
    //     compatible = "zmk,behavior-mod-morph";
    //     #binding-cells = <0>;
    //     bindings = <&l_um_u>, <&u_um_u>;
    //     mods = <(MOD_LSFT|MOD_RSFT)>;
    // };
    //
    // n: ene {
    //     compatible = "zmk,behavior-mod-morph";
    //     #binding-cells = <0>;
    //     bindings = <&l_n>, <&u_n>;
    //     mods = <(MOD_LSFT|MOD_RSFT)>;
    // };
};

/ {
macros {
        // SPANISH LETTERS
        // l_a: acnt_a { // á
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_press>,
        //         <&kp LEFT_ALT>,
        //         <&macro_tap>,
        //         <&kp KP_NUMBER_1 &kp KP_NUMBER_6 &kp KP_NUMBER_0>,
        //         <&macro_release>,
        //         <&kp LEFT_ALT>;
        // };
        //
        // u_a: upr_acnt_a { // Á
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_press>,
        //         <&kp LEFT_ALT>,
        //         <&macro_tap>,
        //         <&kp KP_NUMBER_0 &kp KP_NUMBER_1 &kp KP_NUMBER_9 &kp KP_NUMBER_3>,
        //         <&macro_release>,
        //         <&kp LEFT_ALT>;
        // };
        //
        // l_e: lwr_acnt_e { // é
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_press>,
        //         <&kp LEFT_ALT>,
        //         <&macro_tap>,
        //         <&kp KP_NUMBER_1 &kp KP_NUMBER_3 &kp KP_NUMBER_0>,
        //         <&macro_release>,
        //         <&kp LEFT_ALT>;
        // };
        //
        // u_e: upr_acnt_e { // É
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_press>,
        //         <&kp LEFT_ALT>,
        //         <&macro_tap>,
        //         <&kp KP_NUMBER_1 &kp KP_NUMBER_4 &kp KP_NUMBER_4>,
        //         <&macro_release>,
        //         <&kp LEFT_ALT>;
        // };
        //
        // l_i: lwr_acnt_i { // í
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_press>,
        //         <&kp LEFT_ALT>,
        //         <&macro_tap>,
        //         <&kp KP_NUMBER_1 &kp KP_NUMBER_6 &kp KP_NUMBER_1>,
        //         <&macro_release>,
        //         <&kp LEFT_ALT>;
        // };
        //
        // u_i: upr_acnt_i { // Í
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_press>,
        //         <&kp LEFT_ALT>,
        //         <&macro_tap>,
        //         <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_0 &kp KP_NUMBER_5>,
        //         <&macro_release>,
        //         <&kp LEFT_ALT>;
        // };
        //
        // l_o: lwr_acnt_o { // ó
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_press>,
        //         <&kp LEFT_ALT>,
        //         <&macro_tap>,
        //         <&kp KP_NUMBER_1 &kp KP_NUMBER_6 &kp KP_NUMBER_2>,
        //         <&macro_release>,
        //         <&kp LEFT_ALT>;
        // };
        //
        // u_o: upr_acnt_o { // Ó
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_press>,
        //         <&kp LEFT_ALT>,
        //         <&macro_tap>,
        //         <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_1 &kp KP_NUMBER_1>,
        //         <&macro_release>,
        //         <&kp LEFT_ALT>;
        // };
        //
        // l_u: lwr_acnt_u { // ú
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_press>,
        //         <&kp LEFT_ALT>,
        //         <&macro_tap>,
        //         <&kp KP_NUMBER_1 &kp KP_NUMBER_6 &kp KP_NUMBER_3>,
        //         <&macro_release>,
        //         <&kp LEFT_ALT>;
        // };
        //
        // u_u: upr_acnt_u { // Ú
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_press>,
        //         <&kp LEFT_ALT>,
        //         <&macro_tap>,
        //         <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_1 &kp KP_NUMBER_8>,
        //         <&macro_release>,
        //         <&kp LEFT_ALT>;
        // };
        //
        // l_um_u: lwr_umlt_u { // ü
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_press>,
        //         <&kp LEFT_ALT>,
        //         <&macro_tap>,
        //         <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_5 &kp KP_NUMBER_2>,
        //         <&macro_release>,
        //         <&kp LEFT_ALT>;
        // };
        //
        // u_um_u: upr_umlt_u { // Ü
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_press>,
        //         <&kp LEFT_ALT>,
        //         <&macro_tap>,
        //         <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_2 &kp KP_NUMBER_0>,
        //         <&macro_release>,
        //         <&kp LEFT_ALT>;
        // };
        //
        // l_n: lwr_ene { // ñ
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_press>,
        //         <&kp LEFT_ALT>,
        //         <&macro_tap>,
        //         <&kp KP_NUMBER_1 &kp KP_NUMBER_6 &kp KP_NUMBER_4>,
        //         <&macro_release>,
        //         <&kp LEFT_ALT>;
        // };
        //
        // u_n: upr_ene { // Ñ
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_press>,
        //         <&kp LEFT_ALT>,
        //         <&macro_tap>,
        //         <&kp KP_NUMBER_1 &kp KP_NUMBER_6 &kp KP_NUMBER_5>,
        //         <&macro_release>,
        //         <&kp LEFT_ALT>;
        // };
        //
        // i_excl: inv_excl { // ¡
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_press>,
        //         <&kp LEFT_ALT>,
        //         <&macro_tap>,
        //         <&kp KP_NUMBER_0 &kp KP_NUMBER_1 &kp KP_NUMBER_6 &kp KP_NUMBER_1>,
        //         <&macro_release>,
        //         <&kp LEFT_ALT>;
        // };
        //
        // i_qmrk: inv_qmrk { // ¿
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_press>,
        //         <&kp LEFT_ALT>,
        //         <&macro_tap>,
        //         <&kp KP_NUMBER_0 &kp KP_NUMBER_1 &kp KP_NUMBER_9 &kp KP_NUMBER_1>,
        //         <&macro_release>,
        //         <&kp LEFT_ALT>;
        // };

        // OTHER
        dgree: degree { // °
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_1 &kp KP_NUMBER_7 &kp KP_NUMBER_6>,
                <&macro_release>,
                <&kp LEFT_ALT>;
        };

        // PROGRAMMING SYNTAX
        // s_arrw: slim_arrow { // ->
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_tap>,
        //         <&kp MINUS>,
        //         <&macro_tap>,
        //         <&kp GREATER_THAN>;
        // };

        // b_arrw: back_arrow { // <-
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_tap>,
        //         <&kp LESS_THAN>,
        //         <&macro_tap>,
        //         <&kp MINUS>;
        // };

        // f_arrw: fat_arrow { // =>
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_tap>,
        //         <&kp EQUAL>,
        //         <&macro_tap>,
        //         <&kp GREATER_THAN>;
        // };

        // pipe: pipe_op { // |>
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_tap>,
        //         <&kp PIPE>,
        //         <&macro_tap>,
        //         <&kp GREATER_THAN>;
        // };

        // b_pipe: back_pipe_op { // ~>
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_tap>,
        //         <&kp TILDE>,
        //         <&macro_tap>,
        //         <&kp GREATER_THAN>;
        // };

        // wlrus: wallrus { // :=
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_tap>,
        //         <&kp COLON>,
        //         <&macro_tap>,
        //         <&kp EQUAL>;
        // };
    };
};
